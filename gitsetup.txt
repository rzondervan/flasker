#20220202 rzondervan

source virt/Scripts/activate (of bin ipv Scripts op Chromebook)
deactivate #om virt uit te zetten.

#server starten, zie ./startsrv.sh #chmod +x startsrv.sh
export FLASK_ENV=development
export FLASK_APP=hello.py
flask run

#Modify on computer 2 en push:
git add .
git commit -m 'second commit from Computer 2'
git push -u origin main

#vanaf andere computer verder werken:
git pull
# en verder:
git push

# ssh key voor kunnen lezen en schrijven naar github:
   cd ~
   mkdir .ssh
   cd .ssh/
   ssh-keygen 
   cat ..... (de pubkey naar github kopiëren)

# script to setup the git versioning
# copy per line naar cmdline

/bin/sh gitsetup.sh
git config --global user.name "rzondervan"
git config --global user.email "rzondervan@gmail.com"
git config --global push.default matching
git config --global alias.co checkout
git init

#De url moest in de configfile worden aangepast (van https naar ssh):
#(virt) rzondervan@penguin:~/flasker$ cat .git/config 
[core]
        repositoryformatversion = 0
        filemode = true
        bare = false
        logallrefupdates = true
[remote "origin"]
        url = ssh://git@github.com/rzondervan/flasker.git
        fetch = +refs/heads/*:refs/remotes/origin/*
[branch "main"]
        remote = origin
        merge = refs/heads/main
git config --global init.defaultBranch main

# git clone op tweede PC - map mag er nog niet zijn:
git clone git@github.com:rzondervan/flasker.git
# daarna weer de virt directory vullen.

#Start:
    1  python             #python3 op chromebook
    2  pip install        #pip3 op chromebook
    3  python --version
    4  py --version
    5  pwd
    6  mkdir /c/flasker
    7  cd /c/flasker/
    8  python -m venv virt
    9  source virt/Scripts/activate 
        (on chrome: source virt/bin/activate)
   10  clear
   11  pip install flask # deze installeert een nwe virt-map in de vm
   12  pip freeze
   13  ls

#wtforms toevoegen in virt machine projectdir:
pip3 install flask-wtf #zonder 3 in windows


#Geen virt-map kopiëren:
#Maak: .gitignore in de repo-map. Inhoud:
.gitignore

virt/


#Nieuwe regel in .gitignore?:
git rm -rf --cached .
git add .
#This removes all files from the repository and adds 
#them back (this time respecting the rules in your .gitignore).

#Install Alchemy SQL DB wrapper:
pip install flask-sqlalchemy

#In hello.py file:
from flask_sqlalchemy import SQLAlchemy
from datetime import datetime

# Add Database
app.config['SQLALCHEMY_DATABASE_URI'] = 'sqlite:///users.db'
app.config['SECRET_KEY'] = "my super secret key that no one is supposed to know"
# Initialize the Database
db = SQLAlchemy(app)

# Create Model
class Users(db.Model):
        id = db.Column(db.Integer, primary_key=True)
        name = db.Column(db.String(200), nullable=False)
        email = db.Column(db.String(120), nullable=False, unique=True)
        date_added = db.Column(db.DateTime, default=datetime.utcnow)

        # Create A String
        def __repr__(self):
                return '<Name %r>' % self.name



#In Windows: winpty python
python #op Chromebook naar de python-command-prompt
from hello import db
db.create_all()
exit()
ls

#Migratie naar MySQL
ql#Win (en Lin-repos): mysql.com, Downloads, onderaan link: MYSQL Community (GPL) Downloads
#op Chromebook zonder extra repo:
#niet nodig: apt install mysql-common
Howto install MySQL on a chromebook:
To install the MySQL database, follow the steps below:
Enable Linux support on your Chromebook. ...
Launch the Terminal and execute the commands, sudo apt update 
sudo apt install mariadb-server.
To test that the MySQL database is working, run the commands, sudo mysql -u root -p
Use the mysqladmin command-line utility to alter the MySQL/MariaDB password, using the following syntax:
ALTER USER 'root'@'localhost' IDENTIFIED BY 'password123';
flush privileges;
exit;
Daarna aanmelden: sudo mysql -uroot -p

#Install the mysql connector(s) for flask (vanuit vm, maar toch gedaan op chrombook na deactivate: geeft later 'no mule named 'mysql', dus nog een keer gedaan vanuit virt):
pip install mysql-connector
pip install mysql-connector-python
pip install mysql-connector-python-rf

maak create_db.py
run: python create_db_py

add Alchemy:
werkt niet: pip install MySQLdb, wel:
pip install pymysql
pip install cryptography

create db from model uit py-file:
(winpty) python
from hello import db
db.create_all()